{"version":3,"sources":["components/Tabs.jsx","components/TeamPreview.jsx","components/TeamsList.jsx","services/soccerService.js","pages/HomePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Tabs","leagues","onPickLeague","currentCountryId","className","map","league","onClick","id","name","TeamPreview","team","src","crestUrl","alt","TeamsList","teams","BASE_URL","API_TOKEN","soccerService","queryLeagues","queryTeams","a","axios","method","url","headers","Promise","all","leaguesDetails","data","HomePage","useState","setleagues","setCurrentCountryId","setTeams","initializeLeagues","useEffect","fetchTeams","countryId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98245032.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Tabs = ({ leagues, onPickLeague, currentCountryId }) => {\n\n    return (\n        <div className=\"tabs-wrapper flex align-center\">\n            <ul className=\"flex\">\n                {leagues &&\n                    leagues.map((league) => {\n                        return (\n                            <li\n                                key={league.id}\n                                onClick={() => onPickLeague(league.id)}\n                                className={`tab ${league.id === currentCountryId ? 'active' : ''}`}\n                            >\n                                {league.name}\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const TeamPreview = ({ team }) => {\n\n    return (\n        <div className=\"team-preview-wrapper\">\n            <div className=\"crest-container \">\n                <img\n                    src={team.crestUrl ? team.crestUrl : 'https://image.flaticon.com/icons/png/512/189/189665.png'}\n                    alt=\"team crest image\"\n                />\n            </div>\n            <div className=\"content\">\n                <h3 className=\"team-name\">{team.name}</h3>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { TeamPreview } from './TeamPreview'\n\nexport const TeamsList = ({ teams }) => {\n    \n    return (\n        <div className=\"teams-list-wrapper\">\n            {teams && teams.map(team => {\n                return <TeamPreview key={team.id} team={team} />\n            })}\n        </div>\n    )\n}\n","import axios from \"axios\";\nconst BASE_URL = \"https://api.football-data.org/v2/competitions\";\nconst API_TOKEN =\n    \"7c2e877f828d407891fd9ed1a0b1cd01\";\n\nexport const soccerService = {\n    queryLeagues,\n    queryTeams,\n};\n\nasync function queryLeagues() {\n    const leagues = [2000, 2001, 2002, 2003, 2013].map(id => {\n        const league = axios({\n            method: 'GET',\n            url: `${BASE_URL}/${id}`,\n            headers: { 'X-Auth-Token': API_TOKEN },\n\n        });\n        return league\n    })\n\n    const leaguesDetails = await Promise.all(leagues)\n    return leaguesDetails.map((league) => {\n\n        const { id, name } = league.data;\n\n        return {\n            id,\n            name\n        };\n    });\n}\n\nasync function queryTeams(id) {\n    const data = await axios({\n        method: 'GET',\n        url: `${BASE_URL}/${id}/teams`,\n        headers: { 'X-Auth-Token': API_TOKEN },\n\n    });\n    return data.data.teams.map(team => {\n        const { id, name, crestUrl } = team\n        return {\n            id,\n            name,\n            crestUrl\n        }\n    });\n}","import React, { useEffect, useState } from \"react\";\nimport { Tabs } from \"../components/Tabs\";\nimport { TeamsList } from \"../components/TeamsList\";\nimport { soccerService } from \"../services/soccerService\";\n\nexport const HomePage = () => {\n    const [leagues, setleagues] = useState(null);\n    const [currentCountryId, setCurrentCountryId] = useState(null);\n    const [teams, setTeams] = useState(null);\n\n    const initializeLeagues = async () => {\n        const leagues = await soccerService.queryLeagues();\n        setleagues(leagues);\n        setCurrentCountryId(leagues[0].id)\n    };\n\n    const onPickLeague = (countryId) => {\n        setCurrentCountryId(countryId);\n    };\n\n    useEffect(() => {\n        initializeLeagues();\n    }, []);\n\n    const fetchTeams = async () => {\n        const teams = await soccerService.queryTeams(currentCountryId);\n        setTeams(teams);\n    };\n\n    useEffect(() => {\n        if (currentCountryId) {\n            fetchTeams(currentCountryId);\n        }\n    }, [currentCountryId]);\n\n    return (\n        <div className=\"home-page-wrapper\">\n            <Tabs\n                leagues={leagues}\n                onPickLeague={onPickLeague}\n                currentCountryId={currentCountryId}\n            />\n            <TeamsList teams={teams} />\n        </div>\n    );\n};\n","import { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/main.scss'\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}